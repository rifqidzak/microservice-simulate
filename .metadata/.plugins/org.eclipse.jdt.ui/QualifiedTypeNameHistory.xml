<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="antlr.collections.List"/>
    <fullyQualifiedTypeName name="com.example.microservice.core.base.dto.BasePostResDto"/>
    <fullyQualifiedTypeName name="com.example.microservice.core.base.dto.BasePutResDto"/>
    <fullyQualifiedTypeName name="com.example.microservice.userservice.dto.PutUserDatDto"/>
    <fullyQualifiedTypeName name="com.google.common.base.Optional"/>
    <fullyQualifiedTypeName name="com.example.microservice.userservice.service.declaration.user.GetAllUserService"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
    <fullyQualifiedTypeName name="com.example.microservice.userservice.dao.declaration.GetAllUserDao"/>
    <fullyQualifiedTypeName name="com.example.microservice.core.base.dto.BaseGetResData"/>
    <fullyQualifiedTypeName name="com.example.microservice.userservice.dto.GetUserDataDto"/>
    <fullyQualifiedTypeName name="com.example.microservice.core.base.service.BaseService"/>
    <fullyQualifiedTypeName name="com.example.microservice.userservice.service.base.BaseUserService"/>
    <fullyQualifiedTypeName name="com.example.microservice.userservice.model.User"/>
    <fullyQualifiedTypeName name="com.example.microservice.core.dao.BaseEntityManager"/>
    <fullyQualifiedTypeName name="com.example.microservice.core.service.BaseService"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.SignatureAlgorithm"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="com.example.microservice.userservice.dao.declaration.InsertUserDao"/>
    <fullyQualifiedTypeName name="com.example.microservice.userservice.dto.PostUserDataDto"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="com.example.microservice.userservice.service.declaration.user.InsertUserService"/>
    <fullyQualifiedTypeName name="com.example.microservice.core.dto.BasePostResDto"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="java.util.Arrays"/>
    <fullyQualifiedTypeName name="org.springframework.web.filter.OncePerRequestFilter"/>
    <fullyQualifiedTypeName name="java.lang.RuntimeException"/>
    <fullyQualifiedTypeName name="com.example.microservice.core.util.JwtUtil"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.Claims"/>
    <fullyQualifiedTypeName name="com.example.microservice.userservice.filter.AutorizationFilter"/>
    <fullyQualifiedTypeName name="com.example.microservice.userservice.filter.AuthorizationFilter"/>
    <fullyQualifiedTypeName name="javax.ws.rs.HttpMethod"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpMethod"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.Authentication"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.password.PasswordEncoder"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Value"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.security.Keys"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.io.Decoders"/>
    <fullyQualifiedTypeName name="java.util.Base64"/>
    <fullyQualifiedTypeName name="java.security.interfaces.RSAPublicKey"/>
    <fullyQualifiedTypeName name="java.io.ByteArrayOutputStream"/>
    <fullyQualifiedTypeName name="java.io.IOException"/>
    <fullyQualifiedTypeName name="java.security.interfaces.RSAPrivateKey"/>
    <fullyQualifiedTypeName name="java.util.Map"/>
    <fullyQualifiedTypeName name="com.example.microservice.core.util.JwtKeyGenerator"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
</qualifiedTypeNameHistroy>
